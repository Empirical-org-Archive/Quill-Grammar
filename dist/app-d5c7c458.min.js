!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({"./src/scripts/app/app.module.js":[function(require){"use strict";angular.module("quill-grammar",[require("./core/core.module.js").name,require("./index/index.module.js").name,require("./cms/cms.module.js").name,require("./play/sentences/module.js").name,require("./play/proofreadings/module.js").name,require("./activities/module.js").name,require("./layout/layout.module.js").name,require("empirical-angular").name]).config(require("./app.config.js"))},{"./activities/module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/module.js","./app.config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/app.config.js","./cms/cms.module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/cms/cms.module.js","./core/core.module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/core/core.module.js","./index/index.module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/index/index.module.js","./layout/layout.module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/layout/layout.module.js","./play/proofreadings/module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/module.js","./play/sentences/module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/module.js","empirical-angular":"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/index.js"}],"/home/will/Clients/Quill-Grammar/.tmp/config.js":[function(require,module){module.exports=angular.module("quill-grammar.config",[]).constant("environment","production").constant("firebaseUrl","https://quillgrammar.firebaseio.com/").constant("empiricalBaseURL","https://quill.org/api/v1/").constant("portholeProxy","https://quill.org/porthole_proxy")},{}],"/home/will/Clients/Quill-Grammar/.tmp/templates.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.templates",[]).run(["$templateCache",function($templateCache){$templateCache.put("index.html",'<!DOCTYPE html><html ng-app="quill-grammar" ng-strict-di><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><title></title><script>window.onload = function() { Porthole.WindowProxyDispatcher.start(); };</script><base href="/"></head><body><ui-view></ui-view><script src="https://cdn.brainpop.com/games/assets/js/html2canvas.js"></script>\n<script src="https://cdn.brainpop.com/games/assets/js/cameraProxyDOMCrossDomain.js"></script></body></html>'),$templateCache.put("cms.html",'<div class="grammar-cms"><grammar-cms-categories-new></grammar-cms-categories-new><grammar-cms-categories-list></grammar-cms-categories-list></div>'),$templateCache.put("layout.html","<ui-view></ui-view>"),$templateCache.put("progress-bar.html",'<div class="activity-progress-bar">\n  <p>{{title}} {{progressString}}</p>\n  <div class="progress-bar-indication">\n    <span class="meter" ng-style="progressBarPercentage"></span>\n  </div>\n</div>\n'),$templateCache.put("activities.html",'<h2>Activities</h2>\n<a ui-sref="sentences.list()">Sentence Writing</a>\n<a ui-sref="proofreadings.list()">Passage Proofreadings</a>\n<ui-view></ui-view>\n'),$templateCache.put("index.html",'<button ng-show="showNextQuestion" ng-click="nextQuestion()">Next Question</button>\n<grammar-rule-question rule-question="currentRuleQuestion">\n</grammar-rule-question>\n<button ng-show="showPreviousQuestion" ng-click="previousQuestion()">Previous Question</button>\n'),$templateCache.put("categories.list.html",'<ul>\n  <li ng-repeat="category in categories">\n    <grammar-cms-category category="category"></grammar-cms-category>\n  <li>\n</ul>\n'),$templateCache.put("categories.new.html",'<button ng-click=\'toggleCategoryModal()\'>New Category</button>\n<grammar-cms-modal-dialog\n  show=\'showNewCategoryModal\'\n  action=\'saveCategory\'>\n  <form validate>\n    <label for="category">Category Title</label>\n    <input type="text" name="category" placeholder="Category Name" ng-model="category.title" />\n    <input type="submit" ng-click="$parent.doAction(category)" value="Add Category" />\n  </form>\n</grammar-cms-modal-dialog>\n'),$templateCache.put("category.edit.html",'<ul>\n  <li><img src="assets/images/newrule.png" ng-click=\'newRule()\' alt="Add Rule" title="Add Rule"/></li>\n  <li><img src="assets/images/delete.png" ng-click="showDeleteCategory()" alt="Delete Category" title="Delete Category"/></li>\n  <li><img src="assets/images/edit.png" ng-click="editCategory(category)" alt="Edit Category" title="Edit Category"/></li>\n</ul>\n\n<grammar-cms-modal-dialog\n  show=\'showNewRuleModal\'\n  action=\'saveRule\'>\n  <form validate ng-submit="$parent.doAction(category, rule)">\n    <p>New Rule for {{category.title}}</p>\n    <input type="text" name="rule" placeholder="Rule Name" ng-model="rule.title" required/>\n    <input type="text" name="description" placeholder="Rule Description"\n      ng-model="rule.description" required/>\n    <input type="text" name="classification" placeholder="Rule Classification"\n      ng-model="rule.classification" required/>\n    <input type="submit" value="Add Rule" />\n  </form>\n</grammar-cms-modal-dialog>\n\n<grammar-cms-delete-modal-dialog show=\'showDeleteCategoryModal\' on-delete="deleteCategory" item="category">\n  <p>Deleting this will delete all rules and practice questions in this category.</p>\n</grammar-cms-delete-modal-dialog>\n'),$templateCache.put("category.show.html",'<div class="grammar-cms-section">\n  <div class="grammar-cms-heading">\n    <h2>{{category.title}}</h2>\n    <button\n      ng-show="!category.resolvedRules"\n      ng-click="showRules(category)"\n    >Show Rules</button>\n  <p>{{category.error}}</p>\n  </div>\n  <grammar-cms-category-panel\n    category="category"\n    class="grammar-cms-panel">\n  </grammar-cms-category-panel>\n</div>\n<div ng-show="category.resolvedRules">\n  <grammar-cms-rule\n    ng-show="rule"\n    rule="rule"\n    ng-repeat="rule in category.resolvedRules">\n  </grammar-cms-rule>\n  <button ng-click="hideRules(category)">Hide Rules</button\n</div>\n'),$templateCache.put("deleteModal.html",'<div class="modal" ng-show="show">\n  <input class="modal-state" type="checkbox" ng-checked="show"/>\n  <div class="modal-window">\n    <div class="modal-inner">\n      <label class="modal-close" ng-click="hideModal()"></label>\n      <p>Delete {{item.title}}?<p>\n      <div ng-transclude></div>\n      <button ng-click="_onDelete(item)">Delete</button>\n      <p class="error" ng-show="error">{{error}}</p>\n    </div>\n  </div>\n</div>\n'),$templateCache.put("modal.html",'<div class="modal" ng-show="show">\n  <input class="modal-state" type="checkbox" ng-checked="show"/>\n  <div class="modal-window">\n    <div class="modal-inner">\n      <label class="modal-close" ng-click="hideModal()"></label>\n      <div ng-transclude></div>\n    </div>\n  </div>\n</div>\n'),$templateCache.put("question.edit.html",'<ul>\n  <li><span class="spacer"></span></li>\n  <li><img src="assets/images/delete.png" ng-click="showDeleteRuleQuestion()" alt="Delete Rule Question" title="Delete Rule Question"/></li>\n  <li><img src="assets/images/edit.png" ng-click="editRuleQuestion(question)" alt="Edit Rule Question"/title="Edit Rule Question"></li>\n</ul>\n\n<grammar-cms-delete-modal-dialog show=\'showDeleteRuleQuestionModal\' on-delete="deleteRuleQuestion" item="question">\n  <p>{{question.prompt}}</p>\n</grammar-cms-delete-modal-dialog>\n'),$templateCache.put("question.show.html",'<div class="grammar-cms-section">\n  <div class="grammar-cms-heading">\n    <p>{{question.prompt}}</p>\n  </div>\n  <grammar-cms-rule-question-panel class="grammar-cms-panel" question="question"></grammar-cms-rule-question-panel>\n</div>\n'),$templateCache.put("rule.edit.html",'<ul>\n  <li><img src="assets/images/newrulequestion.png" ng-click=\'showRuleQuestionModal()\' alt="Add Rule Question" title="Add Rule Question"/></li>\n  <li><img src="assets/images/delete.png" ng-click="showDeleteRule()" alt="Delete Rule" title="Delete Rule"/></li>\n  <li><img src="assets/images/edit.png" ng-click="editRule(rule)" alt="Edit Rule" title="Edit Rule"/></li>\n</ul>\n\n<grammar-cms-modal-dialog\n  show=\'showNewRuleQuestionModal\'\n  action=\'saveRuleQuestion\'>\n  <form validate ng-submit=\'$parent.doAction(rule, question)\'>\n    <p>Adding rule question for rule "{{rule.title}}"</p>\n    <input required type="text" name="prompt" placeholder="Prompt"\n    ng-model="question.prompt" />\n    <input type="text" name="hint" placeholder="Hint"\n    ng-model="question.hint" />\n    <p><b>Body</b></p>\n    <ul>\n      <li style="display: block;" ng-repeat="b in question.body">\n        <input type="text" ng-model="b" />\n      </li>\n    </ul>\n    <input type="text" name="body" placeholder="Correct Response"\n    ng-model="question.tempB" />\n    <button type="button" ng-click="addAnswerToBody(question)">\n      Add Correct Response\n    </button>\n    <input required type="text" name="instructions" placeholder="Instructions"\n    ng-model="question.instructions"/>\n    <input type="submit" value="Add Practice Question" />\n  </form>\n</grammar-cms-modal-dialog>\n\n<grammar-cms-delete-modal-dialog show=\'showDeleteRuleModal\' on-delete="deleteRule" item="rule">\n  <p>This will delete all practice questions for this rule.</p>\n</grammar-cms-delete-modal-dialog>\n'),$templateCache.put("rule.show.html",'<div class="grammar-cms-section">\n  <div class="grammar-cms-heading">\n    <h5>{{rule.title}} - {{rule.ruleNumber}}</h5>\n  </div>\n  <grammar-cms-rule-panel class="grammar-cms-panel"\n  rule="rule"></grammar-cms-rule-panel>\n</div>\n\n<ul>\n  <li ng-repeat="question in rule.resolvedRuleQuestions">\n    <grammar-cms-rule-question question="question"></grammar-cms-rule-question>\n  </li>\n</ul>\n'),$templateCache.put("proofreadings.list.html",'<h2>Passage Proofreadings</h2>\n<ul ng-repeat="set in proofreadings">\n  <ul>\n    <li><a ui-sref="play-pf({uid: set.$id})"><h3>{{set.title}}</h3></a></li>\n    <li><a ui-sref="proofreadings.edit({id: set.$id})">edit</a>\n  </ul>\n</ul>\n\n<a ui-sref="proofreadings.new()">new</a>\n'),$templateCache.put("sentences.edit.html",'<label for="sentence.new">Practice Question</label>\n<input type="text" name="sentence.new" placeholder="Name"\n  ng-model="editSentence.title" required/>\n<input type="text" name="sentence.description" placeholder="Description"\nng-model="editSentence.description" required/>\n<select ng-options="flag.$value for flag in flags" ng-model="editSentence.flag"\n  placeholder="Flag" required></select>\n<select ng-options="cat.title for cat in availableCategories"\n  ng-model="editSentence.category" required></select>\n<select ng-options="(rule.ruleNumber + \'. \' + rule.title) for rule in availableRules" ng-model="tempRule"></select>\n\n<button ng-click="addRule(editSentence, tempRule)">Add Rule</button>\n\n<ul ng-repeat="rule in editSentence.rules">\n  <li>\n    <h4>{{rule.ruleNumber}}. {{rule.title}}</h4>\n    <p>{{rule.description}}</p>\n    <input type="text"\n       placeholder="Number of Questions from this Rule"\n       ng-model="rule.quantity"/>\n    <button ng-click="removeRule(editSentence, rule)">X Remove</button>\n  </li>\n</ul>\n<div class="error" ng-show="error">\n  <p>{{error}}</p>\n</div>\n\n<button\n    ng-click="submitSentence(\'^.list\', editSentence, true)"\n    ng-show="editSentence.rules.length > 0">\n  Update\n</button>\n'),$templateCache.put("sentences.list.html",'<h2>Sentence Writing</h2>\n<ul ng-repeat="set in sentences">\n  <ul>\n    <li><a ui-sref="play-sw({uid: set.$id})"><h3>{{set.title}}</h3></a></li>\n    <li><a ui-sref="sentences.edit({id: set.$id})">edit</a>\n  </ul>\n</ul>\n\n<a ui-sref="sentences.new.details()">new</a>\n'),$templateCache.put("sentences.new.details.html",'<form validate ng-submit="nextStep()">\n  <label for="sentence.new">Practice Question</label>\n  <input type="text" name="sentence.new" placeholder="Name"\n    ng-model="newSentence.title" required/>\n  <input type="text" name="sentence.description" placeholder="Description"\n  ng-model="newSentence.description" required/>\n  <select ng-options="flag.$value for flag in flags" ng-model="newSentence.flag"\n    placeholder="Flag" required></select>\n  <select ng-options="cat.title for cat in availableCategories"\n    ng-model="newSentence.category" required></select>\n  <button type="submit">Next</button>\n</form>\n'),$templateCache.put("sentences.new.html","<h3>New Sentence Writing</h3>\n<div ui-view></div>\n"),$templateCache.put("sentences.new.questions.html",'<select ng-options="(rule.ruleNumber + \'. \' + rule.title) for rule in availableRules" ng-model="tempRule"></select>\n\n<button ng-click="addRule(newSentence, tempRule)">Add Rule</button>\n\n<ul ng-repeat="rule in newSentence.rules">\n  <li>\n    <h4>{{rule.ruleNumber}}. {{rule.title}}</h4>\n    <p>{{rule.description}}</p>\n    <input type="text"\n       placeholder="Number of Questions from this Rule"\n       ng-model="rule.quantity"/>\n    <button ng-click="removeRule(newSentence, rule)">X Remove</button>\n  </li>\n</ul>\n<div class="error" ng-show="error">\n  <p>{{error}}</p>\n</div>\n\n<button\n    ng-click="submitSentence(\'^.^.list\', newSentence)"\n    ng-show="newSentence.rules.length > 0">\n  Submit\n</button>\n'),$templateCache.put("passage.html",'<div class="passage">\n  <div ng-class="{\'word\':true, \'error-tooltip-item\': !isBr(word.responseText)}" ng-repeat="word in passage">\n    <p ng-bind-html="word.responseText | trustedHtml" ng-show="isBr(word.responseText)"></p>\n    <input\n      ng-show="!isBr(word.responseText)"\n      type="text"\n      ng-class="{focused: word.isFocused, incorrectError: hasIncorrectError(word), notNecessaryError: hasNotNecessaryError(word), changed: word.text !== word.responseText, correct: hasCorrect(word), underlined: needsUnderlining(word)}"\n      ng-readonly="submitted"\n      ng-focus="word.isFocused = true"\n      ng-change="onInputChange(word)"\n      ng-blur="word.isFocused = false"\n      ng-size="{{word.responseText.length}}"\n      ng-model="word.responseText">\n    </input>\n    <div class="error-tooltip" ng-show="!isBr(word.responseText) && hasErrorToShow(word)"\n      ng-style="word.tooltip.style">\n      <div ng-class="{incorrectError: hasIncorrectError(word), notNecessaryError: hasNotNecessaryError(word), correct: hasCorrect(word)}">\n        <div class="top-panel">\n          <img ng-src="/assets/images/{{answerImageName(word.type)}}_icon.png" alt="{{word.type}}"></img>\n          <p>{{word.type}}</p>\n          <p class="counter">{{errorCounter(word)}}</p>\n          <button ng-click="word.nextAction.fn()">{{word.nextAction.title}}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'),$templateCache.put("pf-heading.html",'<div class="quill-grammar-pf-heading">\n  <h1 ng-show="!pf.image">{{pf.title}}</h1>\n  <div class="header-image" ng-show="pf.image">\n    <img ng-src="/assets/images/{{pf.image}}" alt="pf.title"></img>\n    <p>{{pf.title}}</p>\n  </div>\n  <div class="instructions">\n    <img src="/assets/images/information_icon.png" alt="information"></img>\n    <p ng-bind-html="pf.instructions | trustedHtml"></p>\n  </div>\n  <activity-progress-bar max="getNumErrors()" current="numChanges" title="\'Errors Found:\'"></activity-progress-bar>\n</div>\n'),$templateCache.put("pf-submit-panel.html",'<div class="passage-submit-panel">\n  <div class="passage-message">\n    {{pf.message}}\n  </div>\n  <button ng-class="{\'no-message\': !pf.message}" ng-click="submitPassage()">Check Work</button>\n</div>\n'),$templateCache.put("proofreadings.partner.html",'<div class="partner-iframe-landing">\n  <div class="header-image">\n    <img src="/assets/images/quill_proofreader_logo.png" alt="quill Proofreader"></img>\n  </div>\n  <div class="heading">\n    <p>These three stories are filled with grammatical errors.</p>\n    <p>Proofread the stories and find them all.</p>\n  </div>\n  <div class="story-carousel">\n    <div class="story">\n      <img src="/assets/images/the_princes_and_the_turtle_landing.png" alt="story"></img>\n      <div class="image-overlay">\n        <p class="overlay">The Princes and</p>\n        <p class="overlay">the Turtle</p>\n      </div>\n      <p>In this mythological tale the turtle escapes from the princes punishment.</p>\n      <p class="italic">This story focuses on incorrect pronouns.</p>\n      <a ui-sref="play-pf({uid:\'70B-T6vLMTM9zjQ9LCwoCg\', brainpop: true})">\n        <button>Play it Now</button>\n      </a>\n    </div>\n    <div class="story">\n      <img src="/assets/images/ernest_shackleton_landing.png" alt="story"></img>\n      <div class="image-overlay">\n        <p class="overlay">Ernest Shackelton</p>\n        <p class="overlay">Escapes the Antarctic</p>\n      </div>\n      <p>Captain Shackelton spent four years at sea before escaping the Antarctic.</p>\n      <p class="italic">This story focuses on commonly confused words.</p>\n      <a ui-sref="play-pf({uid:\'MJCtkml_69W2Dav79v4r9Q\', brainpop: true})">\n        <button>Play it Now</button>\n      </a>\n    </div>\n    <div class="story">\n      <img src="/assets/images/the_apollo_8_photograph_landing.png" alt="story"></img>\n      <div class="image-overlay">\n        <p class="overlay">The Apollo 8</p>\n        <p class="overlay">Photograph</p>\n      </div>\n      <p>Astronaut William Anders snaps the first photo of the earth taken from the moon.</p>\n      <p class="italic">This story focuses on prepositional phrases.</p>\n      <a ui-sref="play-pf({uid:\'Yh49ICvX_YME8ui7cDoFXQ\', brainpop: true})">\n        <button>Play it Now</button>\n      </a>\n    </div>\n  </div>\n  <div class="footer">\n    <h4>Visit Quill.org to save your progress.</h4>\n    <p>Quill is free and provides 150 activities from 42 Common Core standards.</p>\n    <p>Teachers can create student accounts and monitor students progress.</p>\n  </div>\n</div>\n'),$templateCache.put("proofreadings.play.html",'<div id="{{brainpop}}" ng-class="{proofreading:true, \'partner-iframe\': brainpop}" ng-show="pf">\n  <quill-grammar-pf-heading pf="pf" num-changes="numChanges"></quill-grammar-pf-heading>\n  <quill-grammar-passage passage="pf.passage" num-changes="numChanges"></quill-grammar-passage>\n  <quill-grammar-passage-submit-panel></quill-grammar-passage-submit-panel>\n\n  <div class="proofreading-modal" ng-show="pf.modal.show">\n    <input class="modal-state" type="checkbox" ng-checked="pf.modal.show"/>\n    <div class="modal-window">\n      <div class="modal-inner">\n        <h2>{{pf.modal.title}}</h2>\n        <p>{{pf.modal.message}}</p>\n        <button ng-click="pf.modal.buttonClick()">{{pf.modal.buttonMessage}}</button>\n      </div>\n    </div>\n  </div>\n\n</div>\n'),$templateCache.put("sentences.concept-overview.html",'<div class="sentence-tooltip-item">\n  <h3>Concept Overview</h3>\n  <div class="sentence-tooltip">\n    <p>Concept Information goes here</p>\n  </div>\n</div>\n'),$templateCache.put("sentences.instructions.html",'<img src="/assets/images/information_icon.png" alt="information_icon"/>\n<p>{{currentRule.instructions}}</p>\n'),$templateCache.put("sentences.play.html",'<div class="sentence-writing" ng-show="swSet.length">\n  <h2>{{currentRule.title}}</h2>\n  <sentence-writing-concept-overview></sentence-writing-concept-overview>\n  <activity-progress-bar title="\'Sentence Completed:\'" max="questions.length" current="number"></activity-progress-bar>\n  <sentence-writing-instructions current-rule="currentRule"></sentence-writing-instructions>\n  <grammar-rule-question rule-question="currentRuleQuestion">\n    <sentence-writing-submit-panel></sentence-writing-submit-panel>\n  </grammar-rule-question>\n</div>\n'),$templateCache.put("sentences.results.html","Custom Results Page\n"),$templateCache.put("sentences.submit-panel.html",'<button ng-show="showNextQuestion" ng-click="nextQuestion()">Next Activity</button>\n'),$templateCache.put("ruleQuestion.html",'<div class="ruleQuestion">\n  <p ng-bind-html="ruleQuestion.resolvedInstructions | trustedHtml"></p>\n  <p ng-bind-html="ruleQuestion.hint | trustedHtml"></p>\n  <p ng-bind-html="ruleQuestion.prompt | formatPrompt | trustedHtml"></p>\n  <input type="text" ng-model="ruleQuestion.response"/>\n  <div class="rule-question-sentence-bar" ng-class="ruleQuestionClass">\n    <div class="message-panel">\n      <p ng-show="ruleQuestion.message">{{ruleQuestion.message}}</p>\n    </div>\n    <div ng-class="{\'no-message\': !ruleQuestion.message, message: ruleQuestion.message}">\n      <button ng-show="showCheckAnswerButton" ng-click="checkAnswer()">{{checkAnswerText}}</button>\n      <ng-transclude></ng-transclude>\n    </div>\n  </div>\n</div>\n')}])},{}],"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/directives/typing_speed.js":[function(require,module){module.exports=["TypingSpeed","_",function(TypingSpeed,_){return{restrict:"A",require:"^ngModel",link:function(scope,element,attrs,model){function getWordCount(){var text=model.$viewValue;return text.trim().length?text.split(" ").length:0}TypingSpeed.waitTime=500,element.on("keydown",function(){TypingSpeed.startTracking()}),element.on("keyup blur",_.debounce(function(){TypingSpeed.wordCount=getWordCount(),TypingSpeed.stopTracking()},TypingSpeed.waitTime))}}}]},{}],"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/index.js":[function(require,module){module.exports=angular.module("empirical-angular",[]).service("ActivitySession",require("./services/activity_session.js")).service("ConceptTagResult",require("./services/concept_tag_result.js")).service("TypingSpeed",require("./services/typing_speed.js")).directive("typingSpeed",require("./directives/typing_speed.js"))},{"./directives/typing_speed.js":"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/directives/typing_speed.js","./services/activity_session.js":"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/services/activity_session.js","./services/concept_tag_result.js":"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/services/concept_tag_result.js","./services/typing_speed.js":"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/services/typing_speed.js"}],"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/services/activity_session.js":[function(require,module){module.exports=["$http","empiricalBaseURL","_",function($http,empiricalBaseURL,_){function activitySessionUrl(id){return empiricalBaseURL+"/activity_sessions/"+id}function update(id,putData){return $http.put(activitySessionUrl(id),putData)}var activitySession=this;activitySession.finish=function(sessionId,putData){return putData=_.extend(putData,{state:"finished"}),update(sessionId,putData).then(function(response){return response.data.activity_session})}}]},{}],"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/services/concept_tag_result.js":[function(require,module){module.exports=["$firebase","firebaseUrl",function($firebase,firebaseUrl){function getResultList(activitySessionId){var resultList=$firebase(resultsRef.child(activitySessionId)).$asArray();return resultList.$loaded()}var conceptTagResult=this,resultsRef=new Firebase(firebaseUrl+"/concept_tag_results");conceptTagResult.save=function(activitySessionId,data){return getResultList(activitySessionId).then(function(list){return list.$add(data)})},conceptTagResult.findAsJsonByActivitySessionId=function(activitySessionId){return getResultList(activitySessionId).then(function(list){return list.map(function(fbResultObject){var clean=JSON.parse(JSON.stringify(fbResultObject));return delete clean.$id,delete clean.$priority,clean})})},conceptTagResult.removeBySessionId=function(activitySessionId){return $firebase(resultsRef).$remove(activitySessionId)}}]},{}],"/home/will/Clients/Quill-Grammar/node_modules/empirical-angular/services/typing_speed.js":[function(require,module){function TypingSpeed(){}module.exports=TypingSpeed,TypingSpeed.prototype={reset:function(){this._tracking=!1,this._startTime=null,this.wordCount=null,this.waitTime=null},startTracking:function(){this._tracking||(this._startTime||(this._startTime=new Date),this._tracking=!0)},stopTracking:function(){if(this._tracking){this._tracking=!1;var endTime=new Date,totalSeconds=this._getElapsedSeconds(this._startTime,endTime,this.waitTime);this.wordsPerMinute=Math.floor(this._getWordsPerMinute(totalSeconds,this.wordCount))}},_getElapsedSeconds:function(startTime,endTime,waitTime){var diff=endTime-startTime;return waitTime&&(diff-=waitTime),diff/1e3},_getWordsPerMinute:function(seconds,wordCount){return wordCount/(seconds/60)}}},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("activities",{parent:"app",url:"/activities",templateUrl:"activities.html"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/controller.js":[function(require,module){"use strict";module.exports=["$scope",function(){}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.activities",[require("./sentences/module.js").name,require("./proofreadings/module.js").name]).config(require("./config.js")).controller("activities",require("./controller.js"))},{"./config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/config.js","./controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/controller.js","./proofreadings/module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/proofreadings/module.js","./sentences/module.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/module.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/proofreadings/config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("proofreadings",{parent:"activities",controller:"ProofreadingsCtrl",url:"/proofreadings",template:"<div ui-view></div>"}).state("proofreadings.list",{url:"/list",templateUrl:"proofreadings.list.html"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/proofreadings/controller.js":[function(require,module){"use strict";module.exports=["$scope","ProofreadingService",function($scope,ProofreadingService){ProofreadingService.getAllProofreadings().then(function(prfs){$scope.proofreadings=prfs})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/proofreadings/module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.activities.proofreadings",[require("./../../../services/proofreading.js").name]).config(require("./config.js")).controller("ProofreadingsCtrl",require("./controller.js"))},{"./../../../services/proofreading.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/proofreading.js","./config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/proofreadings/config.js","./controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/proofreadings/controller.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("sentences",{parent:"activities",controller:"SentencesCtrl",url:"/sentences",template:"<div ui-view></div>"}).state("sentences.list",{url:"/list",templateUrl:"sentences.list.html"}).state("sentences.edit",{url:"/edit/:id",require:"^SentencesCtrl",controller:"EditSentenceCtrl",templateUrl:"sentences.edit.html"}).state("sentences.new",{url:"/new",templateUrl:"sentences.new.html"}).state("sentences.new.details",{parent:"sentences.new",url:"/details?uid",templateUrl:"sentences.new.details.html"}).state("sentences.new.questions",{parent:"sentences.new",url:"/questions?uid",templateUrl:"sentences.new.questions.html"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/controller.js":[function(require,module){"use strict";module.exports=["$scope","CategoryService","$state","RuleService","SentenceWritingService","FlagService","_","$timeout",function($scope,CategoryService,$state,RuleService,SentenceWritingService,FlagService,_,$timeout){function clearError(){$scope.error=null}function setError(msg){$scope.error=msg,$timeout(clearError,5e3)}$scope.newSentence={},FlagService.getFlags().then(function(flags){$scope.flags=flags}),SentenceWritingService.getAllSentenceWritings().then(function(ss){$scope.sentences=ss}),CategoryService.getCategories().then(function(cats){$scope.availableCategories=cats}),RuleService.getAllRules().then(function(rules){$scope.availableRules=rules}),$scope.nextStep=function(){$state.go("^.questions",{uid:$state.params.uid})},$scope.addRule=function(s,r){try{if(s.rules||(s.rules=[]),_.find(s.rules,r))throw new Error("Cannot have two instances of the same rule "+r.title);r&&s.rules.push(r)}catch(e){setError(e.message)}},$scope.removeRule=function(s,r){s&&(s.rules=_.without(s.rules,r))},$scope.submitSentence=function(stateString,s,edit){function handleResult(){$scope.newSentence={},$state.go(stateString)}function handlerError(e){console.error(e),setError(e.message||e)}try{var allPositiveQuantities=_.every(s.rules,function(r){return Number(r.quantity)>0});if(!allPositiveQuantities)throw new Error("Please make all rules have a quanity greater than zero");var p=null;return edit?p=SentenceWritingService.updateSentenceWriting(s):$state.params.uid?(s.$id=$state.params.uid,p=SentenceWritingService.saveSentenceWritingWithId(s)):p=SentenceWritingService.saveSentenceWriting(s),p.then(handleResult,handlerError)}catch(e){setError(e.message)}}}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/editSentence.js":[function(require,module){"use strict";module.exports=["$scope","SentenceWritingService","$state","_","FlagService",function($scope,SentenceWritingService,$state,_,FlagService){var flagPromise=FlagService.getFlags();SentenceWritingService.getSentenceWriting($state.params.id).then(function(s){s.oldCategoryId=_.clone(s.categoryId),s.category=_.first(_.filter($scope.availableCategories,function(o){return o.$id==s.categoryId}));var tempList=_.chain(s.rules).pluck("ruleId").toArray().map(function(s){return String(s)}).value();s.rules=_.chain($scope.availableRules).filter(function(r){return _.contains(tempList,String(r.$id))}).map(function(r){return r.quantity=_.findWhere(s.rules,{ruleId:r.$id}).quantity,r}).value(),flagPromise.then(function(flags){$scope.flags=flags,s.flag=_.first(_.filter($scope.flags,function(f){return f.$id==s.flagId}))}),$scope.editSentence=s})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.activities.sentences",[require("./../../../services/sentenceWriting.js").name,require("./../../../services/flag.js").name]).config(require("./config.js")).controller("EditSentenceCtrl",require("./editSentence.js")).controller("SentencesCtrl",require("./controller.js"))},{"./../../../services/flag.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/flag.js","./../../../services/sentenceWriting.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/sentenceWriting.js","./config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/config.js","./controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/controller.js","./editSentence.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/activities/sentences/editSentence.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/app.config.js":[function(require,module){"use strict";
module.exports=["$urlRouterProvider","$locationProvider",function($urlRouterProvider,$locationProvider){$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode({enabled:!0})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/cms/cms.config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("cms",{parent:"app",url:"/cms",templateUrl:"cms.html",controller:"cms"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/cms/cms.controller.js":[function(require,module){"use strict";module.exports=function(){}},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/cms/cms.module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.cms",[require("./../../directives/grammarCMS").name,require("./../../filters/").name]).config(require("./cms.config.js")).controller("cms",require("./cms.controller.js"))},{"./../../directives/grammarCMS":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/index.js","./../../filters/":"/home/will/Clients/Quill-Grammar/src/scripts/filters/index.js","./cms.config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/cms/cms.config.js","./cms.controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/cms/cms.controller.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/core/core.module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.core",["ui.router",require("../../../../.tmp/config").name,require("../../../../.tmp/templates").name,require("../../directives/index.js").name])},{"../../../../.tmp/config":"/home/will/Clients/Quill-Grammar/.tmp/config.js","../../../../.tmp/templates":"/home/will/Clients/Quill-Grammar/.tmp/templates.js","../../directives/index.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/index.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/index/index.config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("index",{parent:"app",url:"/",templateUrl:"index.html",controller:"index as ind"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/index/index.controller.js":[function(require,module){"use strict";module.exports=["$scope","RuleQuestionService",function($scope,RuleQuestionService){RuleQuestionService._getAllRuleQuestionsWithInstructions().then(function(questions){var i=0;$scope.showNextQuestion=!1,$scope.showPreviousQuestion=!1,$scope.currentRuleQuestion=questions[i],$scope.nextQuestion=function(){$scope.currentRuleQuestion=questions[++i]},$scope.previousQuestion=function(){$scope.currentRuleQuestion=questions[--i]},$scope.$watch("currentRuleQuestion",function(){$scope.currentRuleQuestion||$scope.finish(),$scope.showNextQuestion=i<questions.length&&$scope.currentRuleQuestion&&$scope.currentRuleQuestion.correct,$scope.showPreviousQuestion=i>0},!0),$scope.finish=function(){console.log(i),console.log("Thanks for playing"),$scope.showNextQuestion=!1,$scope.showPreviousQuestion=!1}})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/index/index.module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.index",[require("./../../directives/grammarElements/ruleQuestion/").name]).config(require("./index.config.js")).controller("index",require("./index.controller.js"))},{"./../../directives/grammarElements/ruleQuestion/":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/index.js","./index.config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/index/index.config.js","./index.controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/index/index.controller.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/layout/layout.config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("app",{url:"","abstract":!0,templateUrl:"layout.html"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/layout/layout.module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.layout",[]).config(require("./layout.config.js"))},{"./layout.config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/layout/layout.config.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("play-pf",{parent:"app",templateUrl:"proofreadings.play.html",controller:"ProofreadingPlayCtrl",url:"/play/pf?uid&brainpop"}).state("play-partner-pf-integration-start",{parent:"app",templateUrl:"proofreadings.partner.html",url:"/play/partner-pf"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/controller.js":[function(require,module){"use strict";module.exports=["$scope","$state","ProofreadingService","RuleService","_",function($scope,$state,ProofreadingService,RuleService,_){function error(){$state.go("index")}function fetchListedRules(){var ruleIds=_.pluck($scope.passageQuestions,"ruleNumber");RuleService.getRules(ruleIds).then(function(rules){$scope.referencedRules=rules})}function getNumCorrect(results){return _.where(results,{type:$scope.CORRECT}).length}function getNumResults(){return _.keys($scope.results).length}function showModalNotEnoughFound(){$scope.pf.modal={title:"Keep Trying!",message:"You need to find at least 50% of the errors.",buttonMessage:"Find Errors",buttonClick:function(){$scope.pf.modal.show=!1},show:!0}}function showResultsModal(results,numErrorsFound,numErrorsToSolve){var title=numErrorsFound===numErrorsToSolve?"Congratulations!":"Good Work!",nf=numErrorsFound===numErrorsToSolve?"all "+String(numErrorsFound):String(numErrorsFound)+" of "+String(numErrorsToSolve);$scope.pf.modal={title:title,message:"You found "+nf+" errors",buttonMessage:"Review Your Work",buttonClick:function(){$scope.pf.modal.show=!1,showResults(results)},show:!0}}function showResults(passageResults){_.each(passageResults,function(pr,i){$scope.pf.passage[pr.index].type=pr.type,$scope.pf.passage[pr.index].resultIndex=i,$scope.pf.passage[pr.index].nextAction=$scope.nextAction($scope.pf.passage[pr.index])});var ruleNumbers=_.chain(passageResults).pluck("passageEntry").reject(function(r){return r.type!==$scope.INCORRECT_ERROR}).pluck("ruleNumber").reject(_.isUndefined).uniq().value();generateLesson(ruleNumbers),$scope.focusResult(0),captureReady()}function generateLesson(ruleNumbers){$scope.goToLesson=function(){$state.go("play-sw-gen",{ids:ruleNumbers})},$scope.hasLesson=!0}$scope.id=$state.params.uid,$state.params.brainpop&&($scope.brainpop="BrainPOPsnapArea"),$scope.pfImages={"70B-T6vLMTM9zjQ9LCwoCg":"the_princes_and_the_turtle_story_header.png",MJCtkml_69W2Dav79v4r9Q:"ernest_shackleton_story_header.png",Yh49ICvX_YME8ui7cDoFXQ:"the_apollo_8_photograph_story_header.png"},$scope.obscure=function(key){return btoa(key)},$scope.ubObscure=function(o){return atob(o)},ProofreadingService.getProofreading($scope.id).then(function(pf){pf.passage=ProofreadingService.prepareProofreading(pf.passage,$scope),$scope.pf=pf,$scope.pfImages[$scope.id]&&($scope.pf.image=$scope.pfImages[$scope.id]),fetchListedRules()},error),$scope.numChanges=0,$scope.onInputChange=function(word){if(!word.responseText||!word.text)throw new Error("Should have responseText and text");var nc=$scope.numChanges;word.responseText===word.text||word.countedChange||(word.countedChange=!0,nc++),word.responseText===word.text&&word.countedChange&&(nc=Math.max(nc-1,0),word.countedChange=!1),$scope.numChanges=nc},$scope.getRuleInfoBy=function(ruleNumber){return _.findWhere($scope.referencedRules,{ruleNumber:Number(ruleNumber)}).title},$scope.INCORRECT_ERROR="Incorrect",$scope.NOT_NECESSARY_ERROR="Not Necessary",$scope.CORRECT="Correct",$scope.hasNotNecessaryError=function(word){return word.type===$scope.NOT_NECESSARY_ERROR},$scope.hasIncorrectError=function(word){return word.type===$scope.INCORRECT_ERROR},$scope.hasCorrect=function(word){return word.type===$scope.CORRECT},$scope.submitPassage=function(){function isValid(passageEntry){return _.has(passageEntry,"minus")?passageEntry.responseText===passageEntry.plus:passageEntry.text===passageEntry.responseText}function getErrorType(passageEntry){return _.has(passageEntry,"minus")?$scope.INCORRECT_ERROR:$scope.NOT_NECESSARY_ERROR}var passage=$scope.pf.passage;$scope.results=[],_.each(passage,function(p,i){isValid(p)||$scope.results.push({index:i,passageEntry:p,type:getErrorType(p)}),isValid(p)&&_.has(p,"minus")&&$scope.results.push({index:i,passageEntry:p,type:$scope.CORRECT})});var numErrorsToSolve=1,numErrorsFound=getNumCorrect($scope.results);numErrorsToSolve>numErrorsFound?showModalNotEnoughFound():showResultsModal($scope.results,numErrorsFound,numErrorsToSolve)},$scope.getNumErrors=function(){return _.keys($scope.passageQuestions).length},$scope.nextAction=function(word){if(!$scope.results)return{};var allCorrect=getNumCorrect($scope.results)===getNumResults(),na={fn:null,title:""};return word.resultIndex+1>=getNumResults()?allCorrect?(na.fn=function(){console.log("view results")},na.title="View Results"):(na.fn=function(){$scope.goToLesson()},na.title="Start My Activity"):(na.fn=function(){$scope.focusResult(word.resultIndex+1)},na.title="Next"),na},$scope.focusResult=function(resultIndex){var p=$scope.results[resultIndex-1],r=$scope.results[resultIndex];p&&($scope.pf.passage[p.index].tooltip={}),r&&($scope.pf.passage[r.index].tooltip={style:{visibility:"visible",opacity:1}})},$scope.errorCounter=function(word){return String(word.resultIndex+1)+" of "+$scope.getNumErrors()},$scope.answerImageName=function(t){return t?_.map(t.split(" "),function(s){return s.toLowerCase()}).join("_"):void 0},$scope.needsUnderlining=function(p){return $scope.pf&&$scope.pf.underlineErrorsInProofreader&&_.has(p,"minus")?!0:void 0},$scope.isBr=function(text){return null!==ProofreadingService.htmlMatches(text)},$scope.hasErrorToShow=function(word){return _.any([$scope.hasNotNecessaryError,$scope.hasCorrect,$scope.hasIncorrectError],function(fn){return fn(word)})}}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.play.proofreadings",[require("./../../../services/proofreading.js").name,"angular.filter","uuid4"]).config(require("./config.js")).filter("passageProofreadingFormatter",require("./passageFormatter.js")).directive("quillGrammarPassage",function(){return{restrict:"E",controller:"ProofreadingPlayCtrl",scope:{passage:"=",numChanges:"="},templateUrl:"passage.html"}}).directive("quillGrammarPfHeading",function(){return{restrict:"E",controller:"ProofreadingPlayCtrl",scope:{pf:"=",numChanges:"="},templateUrl:"pf-heading.html"}}).directive("quillGrammarPassageSubmitPanel",function(){return{restrict:"E",controller:"ProofreadingPlayCtrl",templateUrl:"pf-submit-panel.html"}}).directive("ngSize",require("./ngSize.js")).controller("ProofreadingPlayCtrl",require("./controller.js"))},{"./../../../services/proofreading.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/proofreading.js","./config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/config.js","./controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/controller.js","./ngSize.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/ngSize.js","./passageFormatter.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/passageFormatter.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/ngSize.js":[function(require,module){"use strict";module.exports=function(){return{restrict:"A",link:function(scope,element,attrs){attrs.$observe("ngSize",function(){attrs.$set("size",attrs.ngSize)})}}}},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/proofreadings/passageFormatter.js":[function(require,module){"use strict";module.exports=function(){return function(input){return input}}},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/config.js":[function(require,module){"use strict";module.exports=["$stateProvider",function($stateProvider){$stateProvider.state("play-sw",{parent:"app",templateUrl:"sentences.play.html",controller:"SentencePlayCtrl",url:"/play/sw?uid&student"}).state("play-sw.results",{parent:"app",templateUrl:"sentences.results.html",controller:"ResultsController",url:"/play/sw/results?uid&student"}).state("play-sw-gen.results",{parent:"app",templateUrl:"sentences.results.html",controller:"ResultsController",url:"/play/sw/results?internal"}).state("play-sw-gen",{parent:"app",templateUrl:"sentences.play.html",controller:"SentencePlayCtrl",url:"/play/sw/g/:ids?student"})}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/controller.js":[function(require,module){"use strict";module.exports=["$scope","$state","SentenceWritingService","RuleService","_","ConceptTagResult","ActivitySession",function($scope,$state,SentenceWritingService,RuleService,_,ConceptTagResult,ActivitySession){function retrieveNecessaryRules(ruleIds,quantities){RuleService.getRules(ruleIds).then(function(resolvedRules){$scope.swSet=_.chain(resolvedRules).map(function(rr,i){return rr.selectedRuleQuestions=_.chain(rr.resolvedRuleQuestions).sample(quantities[i]).map(function(rrq){return rrq.ruleIndex=i,rrq}).value(),rr}).value(),$scope.questions=_.chain($scope.swSet).pluck("selectedRuleQuestions").flatten().value(),$scope.currentRuleQuestion=$scope.questions[0],$scope.showNextQuestion=!1,$scope.showPreviousQuestion=!1},function(){})}function errorStateChange(){$state.go("index")}if($scope.$watch("currentRuleQuestion",function(crq){_.isObject(crq)&&($scope.currentRule=$scope.swSet[crq.ruleIndex])}),$scope.number=0,$scope.numAttempts=2,$scope.$on("answerRuleQuestion",function(e,crq,answer,correct){if(!answer||!crq)throw new Error("We need a rule question and answer");$scope.sessionId&&ConceptTagResult.save($scope.sessionId,{concept_tag:crq.conceptTag,concept_class:crq.conceptClass,concept_category:crq.conceptCategory,answer:answer,correct:correct?1:0}),(correct||crq.attempts>=$scope.numAttempts)&&($scope.showNextQuestion=!0)}),$state.params.student&&($scope.sessionId=$state.params.student),$scope.finish=function(){var sid=$scope.sessionId,p=null;sid&&(p=ConceptTagResult.findAsJsonByActivitySessionId(sid).then(function(list){return ActivitySession.finish(sid,{concept_tag_results:list,percentage:1})}).then(function(){return ConceptTagResult.removeBySessionId(sid)})),p?p.then(function(){$state.go(".results",{student:sid})}):$state.go(".results",{internal:!0})},$scope.nextQuestion=function(){$scope.showNextQuestion=!1;var crq=$scope.currentRuleQuestion,ncrq=$scope.questions[_.indexOf($scope.questions,crq)+1];return ncrq?($scope.number=$scope.number+1,void($scope.currentRuleQuestion=ncrq)):($scope.number=$scope.number+1,void $scope.finish())},$state.params.uid)SentenceWritingService.getSentenceWriting($state.params.uid).then(function(sw){$scope.sentenceWriting=sw;var ruleIds=_.pluck(sw.rules,"ruleId"),quantities=_.pluck(sw.rules,"quantity");return retrieveNecessaryRules(ruleIds,quantities)},errorStateChange);else if($state.params.ids){var ids=_.uniq($state.params.ids.split(",")),quantities=_.chain(ids).map(function(){return 3}).value();retrieveNecessaryRules(ids,quantities)}}]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/module.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.play.sentences",[require("./../../../services/sentenceWriting.js").name]).config(require("./config.js")).directive("sentenceWritingConceptOverview",function(){return{restrict:"E",templateUrl:"sentences.concept-overview.html"}}).directive("sentenceWritingInstructions",function(){return{restrict:"E",templateUrl:"sentences.instructions.html",scope:{currentRule:"="}}}).directive("sentenceWritingSubmitPanel",function(){return{restrict:"E",templateUrl:"sentences.submit-panel.html"}}).controller("ResultsController",require("./results.controller.js")).controller("SentencePlayCtrl",require("./controller.js"))},{"./../../../services/sentenceWriting.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/sentenceWriting.js","./config.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/config.js","./controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/controller.js","./results.controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/results.controller.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/app/play/sentences/results.controller.js":[function(require,module){"use strict";module.exports=function($scope,$state,portholeProxy){var windowProxy=new Porthole.WindowProxy(portholeProxy),postObj={action:"activity_complete"};$state.params.student&&(postObj.id=$state.params.student),$state.params.internal||windowProxy.post(postObj)},module.exports.$inject=["$scope","$state","portholeProxy"]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/categories.list.js":[function(require,module){"use strict";function categoriesList(){return{restrict:"E",templateUrl:"categories.list.html",controller:"GrammarCmsCtrl"}}module.exports=categoriesList},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/categories.new.js":[function(require,module){"use strict";function categoriesNew(){return{restrict:"E",templateUrl:"categories.new.html",controller:"GrammarCmsCtrl"}}module.exports=categoriesNew},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/category.edit.js":[function(require,module){function panel(){return{restrict:"E",scope:{category:"="},templateUrl:"category.edit.html",controller:"CategoryCtrl"}}function controller($scope,cs,rs,$q){$scope.deleteCategory=function(category){return cs.deleteCategory(category).then(function(){console.log("deleting category ",category)})},$scope.editCategory=function(category){console.log(category)},$scope.newRule=function(){$scope.showNewRuleModal=!0},$scope.showDeleteCategory=function(){$scope.showDeleteCategoryModal=!0},$scope.saveRule=function(category,rule){var d=$q.defer();return rs.saveRule(rule).then(function(ruleId){category.rules||(category.rules={}),category.rules[ruleId]=!0,cs.updateCategory(category).then(function(){category.resolvedRules||(category.resolvedRules=[]),category.resolvedRules.push(rule),$scope.category=category,d.resolve()},d.reject)},d.reject),d.promise}}module.exports.panel=panel,module.exports.controller=["$scope","CategoryService","RuleService","$q",controller]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/category.show.js":[function(require,module){"use strict";function categoryShow(){return{restrict:"E",templateUrl:"category.show.html",controller:"GrammarCmsCtrl",scope:{category:"="}}}module.exports=categoryShow},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/cms.controller.js":[function(require,module){"use-strict";function cmsController($scope,cs,rs){cs.getCategories().then(function(categories){$scope.categories=categories}),$scope.showRules=function(category){rs.getRules(category.rules).then(function(rules){category.resolvedRules=rules},function(e){category.error=e})},$scope.hideRules=function(category){category.resolvedRules=null},$scope.saveCategory=function(category){return cs.saveCategory(category).then(function(){console.log("Saved",category),category.title=""})},$scope.toggleCategoryModal=function(){$scope.showNewCategoryModal=!0}}module.exports=["$scope","CategoryService","RuleService",cmsController]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/index.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.directives.grammarCMS",[require("./../../services/category.js").name,require("./../../services/rule.js").name]).directive("grammarCmsCategoriesNew",require("./categories.new.js")).directive("grammarCmsCategoriesList",require("./categories.list.js")).directive("grammarCmsCategory",require("./category.show.js")).directive("grammarCmsRule",require("./rule.show.js")).directive("grammarCmsCategoryPanel",require("./category.edit.js").panel).directive("grammarCmsRulePanel",require("./rule.edit.js").panel).directive("grammarCmsRuleQuestion",require("./question.js").show).directive("grammarCmsRuleQuestionPanel",require("./question.js").panel).directive("grammarCmsModalDialog",require("./modal.js").modal).directive("grammarCmsDeleteModalDialog",require("./modal.js").deleteModal).controller("ModalDialogCtrl",require("./modal.js").controller).controller("RuleCtrl",require("./rule.edit.js").controller).controller("CategoryCtrl",require("./category.edit.js").controller).controller("QuestionCtrl",require("./question.js").controller).controller("GrammarCmsCtrl",require("./cms.controller.js"))},{"./../../services/category.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/category.js","./../../services/rule.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/rule.js","./categories.list.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/categories.list.js","./categories.new.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/categories.new.js","./category.edit.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/category.edit.js","./category.show.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/category.show.js","./cms.controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/cms.controller.js","./modal.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/modal.js","./question.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/question.js","./rule.edit.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/rule.edit.js","./rule.show.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/rule.show.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/modal.js":[function(require,module){function modal(){return{restrict:"E",scope:{show:"=",action:"="},replace:!0,transclude:!0,templateUrl:"modal.html",controller:"ModalDialogCtrl",link:function(scope){scope.hideModal=function(){scope.show=!1},scope.doAction=function(){scope.action.apply(this,arguments).then(function(){scope.hideModal()})}}}}function deleteModal(){return{restrict:"E",scope:{show:"=",onDelete:"=",item:"="},replace:!0,transclude:!0,templateUrl:"deleteModal.html",link:function(scope){scope.hideModal=function(){scope.show=!1},scope._onDelete=function(){scope.onDelete(scope.item).then(function(){scope.hideModal()},function(error){scope.error=error})}}}}function controller(){}module.exports.modal=modal,module.exports.deleteModal=deleteModal,module.exports.controller=["$scope",controller]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/question.js":[function(require,module){"use strict";function show(){return{restrict:"E",templateUrl:"question.show.html"}}function panel(){return{restrict:"E",controller:"QuestionCtrl",templateUrl:"question.edit.html"}}function controller($scope,rqs,rs){$scope.showDeleteRuleQuestion=function(){$scope.showDeleteRuleQuestionModal=!0},$scope.deleteRuleQuestion=function(question){var rule=$scope.rule;return rqs.deleteRuleQuestion(question).then(function(){return rs.removeRuleQuestionFromRule(rule,question)})}}module.exports.show=show,module.exports.panel=panel,module.exports.controller=["$scope","RuleQuestionService","RuleService",controller]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/rule.edit.js":[function(require,module){"use strict";function controller($scope,rs,rqs){$scope.deleteRule=function(){var category=$scope.category,rule=$scope.rule;return rs.deleteRule(category,rule).then(function(){$scope.rule=null},function(error){$scope.rule.error=error})},$scope.showDeleteRule=function(){$scope.showDeleteRuleModal=!0},$scope.editRule=function(rule){console.log("editing rule "+rule)},$scope.showRuleQuestionModal=function(){$scope.showNewRuleQuestionModal=!0},$scope.saveRuleQuestion=function(rule,question){return rqs.saveRuleQuestion(question).then(function(questionId){return rule.ruleQuestions||(rule.ruleQuestions={}),console.log(questionId),rule.ruleQuestions[questionId]=!0,rs.updateRule(rule)})},$scope.addAnswerToBody=function(question){question&&question.body&&question.body.push&&question.tempB&&(question.body.push(question.tempB),question.tempB=null)},$scope.question={body:[]}}function panel(){return{restrict:"E",controller:"RuleCtrl",templateUrl:"rule.edit.html"}}module.exports.controller=["$scope","RuleService","RuleQuestionService",controller],module.exports.panel=panel},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarCMS/rule.show.js":[function(require,module){"use strict";function ruleShow(){return{restrict:"E",templateUrl:"rule.show.html",controller:"GrammarCmsCtrl"}}module.exports=ruleShow},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/controller.js":[function(require,module){"use strict";module.exports=function($scope,_){function removeDelimeters(b){if("string"!=typeof b)throw new Error("Input must be type string removeDelimeters");return b.replace(delim.open,"").replace(delim.close,"")}function compareEntireAnswerToBody(answer){return function(b){var cleaned=removeDelimeters(b);return answer===cleaned}}function compareGrammarElementToBody(answer){return function(b){if(!answer)return!1;var reg=new RegExp(delim.open+"(.*)"+delim.close,"g"),results=reg.exec(b),grammarElements=_.rest(results);return _.every(grammarElements,function(element){var r=new RegExp("(^|\\W{1,1})"+element+"(\\W{1,1}|$)","g");return-1!==answer.search(r)})}}function ensureLengthIsProper(answer){var threshold=.8;return function(body){var b=body.replace(delim.open,"").replace(delim.close,"");return answer.length/b.length>=threshold}}function setMessage(msg){$scope.ruleQuestion.message=msg}var strictTypingMode=!1,delim={open:"{",close:"}"};$scope.answerText={"default":"Check Work",notLongEnough:"Your answer is not long enough. Try again!",tryAgain:"Try Again!",tryAgainButton:"Recheck Work",typingErrorNonStrict:"You are correct, but you have some typing errors. You may correct them or continue.",typingErrorStrict:"You are correct, but have some typing errors. Please fix them.",incorrectWithAnswer:function(answer){return"Incorrect. Correct Answer: "+answer}},$scope.$watch("ruleQuestion.$id",function(){$scope.checkAnswerText=$scope.answerText["default"],$scope.ruleQuestionClass="default",$scope.showCheckAnswerButton=!0}),$scope.checkAnswer=function(){var rq=$scope.ruleQuestion,answer=rq.response,correct=!1;if(answer){var exactMatch=_.any(rq.body,compareEntireAnswerToBody(answer));if(exactMatch)setMessage("Correct!"),$scope.ruleQuestionClass="correct",correct=!0;else{var grammarMatch=_.any(rq.body,compareGrammarElementToBody(answer)),answerIsAdequateLength=_.every(rq.body,ensureLengthIsProper(answer));answerIsAdequateLength||(setMessage($scope.answerText.notLongEnough),$scope.ruleQuestionClass="tryAgain"),grammarMatch&&!strictTypingMode?(setMessage($scope.answerText.typingErrorNonStrict),$scope.ruleQuestionClass="correct",correct=!0):grammarMatch?($scope.ruleQuestionClass="tryAgain",setMessage($scope.answerText.typingErrorStrict)):($scope.ruleQuestionClass="tryAgain",setMessage($scope.answerText.tryAgain))}rq.attempts?rq.attempts++:rq.attempts=1,correct||rq.attempts>=2?($scope.$emit("answerRuleQuestion",rq,answer,correct),$scope.showCheckAnswerButton=!1,correct||(setMessage($scope.answerText.incorrectWithAnswer("correct answer here")),$scope.ruleQuestionClass="incorrect")):correct||($scope.$emit("answerRuleQuestionIncorrect",rq),$scope.checkAnswerText=$scope.answerText.tryAgainButton)}}},module.exports.$inject=["$scope","_"]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/directive.js":[function(require,module){module.exports=function(){return{restrict:"E",transclude:!0,scope:{ruleQuestion:"="},templateUrl:"ruleQuestion.html",controller:"GrammarRuleQuestionCtrl"}}},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/filters.js":[function(require,module){"use strict";module.exports.formatPrompt=function(){return function(input){return input}}},{}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/index.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.directives.ruleQuestion",[]).directive("grammarRuleQuestion",require("./directive.js")).filter("formatPrompt",require("./filters.js").formatPrompt).controller("GrammarRuleQuestionCtrl",require("./controller.js"))},{"./controller.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/controller.js","./directive.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/directive.js","./filters.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/grammarElements/ruleQuestion/filters.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/index.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.directives",[]).directive("activityProgressBar",require("./progressBar.js").directive).controller("ProgressBarCtrl",require("./progressBar.js").controller)},{"./progressBar.js":"/home/will/Clients/Quill-Grammar/src/scripts/directives/progressBar.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/directives/progressBar.js":[function(require,module){"use strict";module.exports.directive=function(){return{restrict:"E",scope:{title:"=",max:"=",current:"="},controller:"ProgressBarCtrl",templateUrl:"progress-bar.html"}},module.exports.controller=function($scope){function calculate(){$scope.progressString=String($scope.current)+" of "+String($scope.max),$scope.progressBarPercentage={width:String($scope.current/$scope.max*100)+"%"}}$scope.$watch("max",calculate),$scope.$watch("current",calculate),calculate()},module.exports.controller.$inject=["$scope"]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/filters/index.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.filters",[]).filter("trustedHtml",require("./trustedHtml.js"))},{"./trustedHtml.js":"/home/will/Clients/Quill-Grammar/src/scripts/filters/trustedHtml.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/filters/trustedHtml.js":[function(require,module){module.exports=function($sce){return function(input){return $sce.trustAsHtml(input)}},module.exports.$inject=["$sce"]},{}],"/home/will/Clients/Quill-Grammar/src/scripts/services/category.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.category",[require("./crud.js").name]).factory("CategoryService",["CrudService","_",function(CrudService,_){var crud=new CrudService("categories",["title","rules"],"cms");return this.saveCategory=function(category){return crud.save(category)},this.deleteCategory=function(category){return crud.del(category)},this.getCategories=function(){return crud.all()},this.updateCategory=function(category){return crud.update(category)},this.removeRuleFromCategory=function(category,rule){if(!category||!category.rules)throw new Error("Category does not have any rules to remove");return _.each(category.rules,function(r,key){key===rule.$id&&(category.rules[key]=null)}),crud.update(category)},this}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/classification.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.classification",[require("./crud.js").name]).factory("ClassificationService",["CrudService","$q",function(CrudService,$q){var crud=new CrudService("classifications",[],"cms"),cfs=this;
return cfs.saveClassification=function(classification){return crud.save(classification)},cfs.deleteClassification=function(classification){return crud.del(classification)},cfs.getClassification=function(classificationId){return crud.get(classificationId)},cfs.getClassificationIdByString=function(classificationString){var d=$q.defer();return crud.all().then(function(classifications){angular.forEach(classifications,function(cl){var c=cl.$value;c.toLowerCase()===classificationString.toLowerCase()&&d.resolve(cl.$id)}),cfs.saveClassification(classificationString).then(function(id){console.log(id),d.resolve(id)},d.reject)},d.reject),d.promise},cfs}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.crud",["firebase","underscore"]).factory("CrudService",["firebaseUrl","$firebase","$q","_",function(firebaseUrl,$firebase,$q,_){function crud(entity,properties,prefix){function getRef(){return baseRef}function sanitize(item){return properties&&_.isObject(item)?_.pick(item,function(value,key){return"$"===key[0]||_.contains(properties,key)}):item}function isValid(item){return _.has(item,"$value")?!_.isUndefined(item.$value)&&null!==item.$value:!0}function save(item){var d=$q.defer(),entityItem=sanitize(item);return baseRef.$push(entityItem).then(function(ref){d.resolve(ref.key())},function(error){d.reject(error)}),d.promise}function del(item){var d=$q.defer();if(!item||!item.$id)throw new Error("Item doesn't have an $id property");return baseRef.$remove(item.$id).then(function(ref){d.resolve(ref.key())},function(error){d.reject(error)}),d.promise}function all(){var d=$q.defer(),a=baseRef.$asArray();return a.$loaded().then(function(){d.resolve(a)},function(error){d.reject(error)}),d.promise}function get(entityId){var d=$q.defer(),entityRef=new Firebase(baseRoute+"/"+entityId),entity=$firebase(entityRef).$asObject();return entity.$loaded().then(function(entityData){isValid(entityData)?d.resolve(entityData):(console.error(entityId),console.error(entityData),d.reject(new Error("Entity did not meet the properties requirement")))},function(error){d.reject(error)}),d.promise}function update(item){var d=$q.defer();return baseCollection.$loaded().then(function(){var index=item.$id;baseCollection[index]=sanitize(item),baseCollection.$save(index).then(function(ref){console.log(ref.key()),d.resolve(ref.key())},function(error){console.log(error),d.reject(error)})}),d.promise}function saveWithCustomId(item){if(!item.$id)throw new Error("No id provided");var id=String(item.$id);delete item.$id,item=sanitize(item);var fb=$firebase(new Firebase(baseRoute+"/"+id));return fb.$set(item)}if(!entity||""===entity)throw new Error("Firebase Entity MUST be defined");if(!properties)throw new Error("Please define the properties for your entity "+entity);"/"!==firebaseUrl[firebaseUrl.length-1]&&(firebaseUrl+="/");var baseUrl=String(firebaseUrl);prefix&&(baseUrl=baseUrl+prefix+"/");var baseRoute=baseUrl+entity,baseRef=$firebase(new Firebase(baseRoute)),baseCollection=baseRef.$asObject();return{save:save,saveWithCustomId:saveWithCustomId,del:del,all:all,get:get,update:update,getRef:getRef}}return crud}])},{}],"/home/will/Clients/Quill-Grammar/src/scripts/services/flag.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.flags",[require("./crud.js").name]).factory("FlagService",["CrudService",function(CrudService){var crud=new CrudService("flags",[],"cms"),fs=this;return fs.saveFlag=function(flag){return crud.save(flag)},fs.deleteFlag=function(flag){return crud.del(flag)},fs.getFlag=function(flagId){return crud.get(flagId)},fs.getFlags=function(){return crud.all()},fs}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/indexBy.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.index",[require("./crud.js").name]).factory("IndexService",["firebaseUrl","$firebase",function(firebaseUrl,$firebase){function index(indexName){function getEntries(){return $firebase(new Firebase(firebaseUrl+indexName)).$asObject()}function getEntry(e){return $firebase(new Firebase(firebaseUrl+indexName+"/"+e)).$asObject()}function addElementToEntry(entry,element){return getEntry(entry).$loaded().then(function(list){return list[element]=!0,list.$save()})}function removeElementFromEntry(entry,element){return getEntry(entry).$loaded().then(function(list){return delete list[element],list.$save()})}function removeEntry(entry){return getEntries().$loaded().then(function(entries){return entries[entry]=null,entries.$save()})}function lookUpElementsForEntry(entry){return getEntry(entry)}if("/"!==firebaseUrl[firebaseUrl.length-1]&&(firebaseUrl+="/"),firebaseUrl+="indices/",!indexName||""===indexName)throw new Error("Firebase indexName MUST be defined");return{addElementToEntry:addElementToEntry,removeElementFromEntry:removeElementFromEntry,removeEntry:removeEntry,lookUpElementsForEntry:lookUpElementsForEntry}}return index}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/instruction.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.instruction",[require("./crud.js").name]).factory("InstructionService",["CrudService",function(CrudService){var crud=new CrudService("instructions",[],"cms");return this.saveInstruction=function(instruction){return crud.save(instruction)},this.deleteInstruction=function(instruction){return crud.del(instruction)},this.getInstruction=function(instructionId){return crud.get(instructionId)},this}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/proofreading.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.proofreading",[require("./crud.js").name]).factory("ProofreadingService",["CrudService","_","uuid4",function(CrudService,_,uuid4){var crud=new CrudService("passageProofreadings",["flagId","categoryId","instructions","passage","title","description"],"activities"),ps=this;return this.saveProofreading=function(proofreading){return crud.save(proofreading)},this.deleteProofreading=function(proofreading){return crud.del(proofreading)},this.getProofreading=function(proofreadingId){return crud.get(proofreadingId)},this.getAllProofreadings=function(){return crud.all()},this.htmlMatches=function(text){return text?text.match(/<\s*br\s*?\/>/g):null},this.prepareProofreading=function(pf,$scope){$scope.passageQuestions={},pf.replace(/{\+([^-]+)-([^|]+)\|([^}]+)}/g,function(key,plus,minus,ruleNumber){var genKey=uuid4.generate();$scope.passageQuestions[genKey]={plus:plus,minus:minus,ruleNumber:ruleNumber},pf=pf.replace(key,genKey)});var prepared=_.chain(pf.split(/\s/)).filter(function(n){return""!==n}).map(function(w){var matches=ps.htmlMatches(w);return matches?(_.each(matches,function(match){w!==match&&(w=w.replace(new RegExp(match,"g")," "+match+" "))}),w=w.trim(),w.split(/\s/)):w}).flatten().map(function(w){return _.each($scope.passageQuestions,function(v,key){w!==key&&-1!==w.indexOf(key)&&(w=w.split(key).join(" "+key).split(/\s/))}),w}).flatten().map(function(w){var passageQuestion=$scope.passageQuestions[w];if(passageQuestion){var c=_.clone(passageQuestion);return c.text=c.minus,c.responseText=c.text,c}return{text:w,responseText:w}}).map(function(w){return w.text=w.text.trim(),w.responseText=w.responseText.trim(),w}).filter(function(w){return""!==w.text}).value();return prepared},this}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/rule.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.rule",[require("./crud.js").name,require("./ruleQuestion.js").name,require("./classification.js").name]).factory("RuleService",["CrudService","CategoryService","RuleQuestionService","$q","ClassificationService","_",function(CrudService,CategoryService,RuleQuestionService,$q,ClassificationService,_){var crud=new CrudService("rules",["title","description","ruleNumber","classification","ruleQuestions"],"cms");return this.updateRule=function(rule){return crud.update(rule)},this.saveRule=function(rule){function getClassification(rule){return ClassificationService.getClassificationIdByString(rule.classification).then(function(cid){return rule.classification=cid,rule},function(error){return error})}function addRuleNumber(rule){var ruleNumber=new CrudService("ruleNumberCounter",[],"cms").getRef();ruleNumber.$transaction(function(currentRuleNumber){if(!currentRuleNumber)return 1;if(!(0>currentRuleNumber))return currentRuleNumber+1}).then(function(snapshot){null===snapshot?d.reject(new Error("current rule number error: snapshot null")):(rule.ruleNumber=snapshot.val(),d.resolve(rule))},function(error){d.reject(error)});var d=$q.defer();return d.promise}return getClassification(rule).then(addRuleNumber).then(crud.save)},this.deleteRule=function(category,rule){return crud.del(rule).then(function(){return CategoryService.removeRuleFromCategory(category,rule)})},this.getAllRules=function(){return crud.all()},this.removeRuleQuestionFromRule=function(rule,question){if(!rule||!rule.ruleQuestions)throw new Error("rule does not have any ruleQuestions to remove");return _.each(rule.ruleQuestions,function(r,key){key===question.$id&&(rule.ruleQuestions[key]=null)}),crud.update(rule)},this.getRules=function(ruleIds){function getRuleQuestionsForRules(rules){var rqp=$q.defer(),ruleQuestionPromises=[];return _.each(rules,function(rule){ruleQuestionPromises.push(RuleQuestionService.getRuleQuestions(rule.ruleQuestions))}),$q.all(ruleQuestionPromises).then(function(ruleQuestions){_.each(rules,function(rule,index){rule.resolvedRuleQuestions=ruleQuestions[index]}),rqp.resolve(rules)},function(errors){rqp.reject(errors)}),rqp.promise}function getClassificationForRules(rules){var cfr=$q.defer(),cls=[];return _.each(rules,function(rule){cls.push(ClassificationService.getClassification(rule.classification))}),$q.all(cls).then(function(classifications){_.each(rules,function(rule,index){rule&&classifications[index]&&(rule.resolvedClassification=classifications[index])}),cfr.resolve(rules)},function(error){console.log(error),cfr.resolve(rules)}),cfr.promise}var d=$q.defer(),promises=_.map(ruleIds,function(id,key){return _.isArray(ruleIds)||(id=key),crud.get(id)});return $q.all(promises).then(getRuleQuestionsForRules).then(getClassificationForRules).then(function(rules){d.resolve(rules)},function(error){d.reject(error)}),d.promise},this}])},{"./classification.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/classification.js","./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js","./ruleQuestion.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/ruleQuestion.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/ruleQuestion.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.ruleQuestion",[require("./crud.js").name,require("./instruction.js").name]).factory("RuleQuestionService",["CrudService","InstructionService","$q","_",function(CrudService,InstructionService,$q,_){function getInstructionForRuleQuestion(ruleQuestions){var insp=$q.defer(),ins=[];return _.each(ruleQuestions,function(rq){ins.push(InstructionService.getInstruction(rq.instructions))}),$q.all(ins).then(function(instructions){_.each(ruleQuestions,function(rq,index){rq.resolvedInstructions=instructions[index].$value}),insp.resolve(ruleQuestions)},function(errors){insp.reject(errors)}),insp.promise}var crud=new CrudService("ruleQuestions",["body","hint","instructions","prompt","conceptTag","conceptClass","conceptCategory"],"cms");return this.saveRuleQuestion=function(ruleQuestion){return crud.save(ruleQuestion)},this.deleteRuleQuestion=function(ruleQuestion){return crud.del(ruleQuestion)},this._getAllRuleQuestionsWithInstructions=function(){return crud.all().then(getInstructionForRuleQuestion)},this.getRuleQuestions=function(ruleQuestionIds){var d=$q.defer(),promises=_.map(ruleQuestionIds,function(id,key){return _.isArray(ruleQuestionIds)||(id=key),crud.get(id)});return $q.all(promises).then(getInstructionForRuleQuestion).then(function(ruleQuestions){d.resolve(ruleQuestions)},function(error){d.reject(error)}),d.promise},this}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js","./instruction.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/instruction.js"}],"/home/will/Clients/Quill-Grammar/src/scripts/services/sentenceWriting.js":[function(require,module){"use strict";module.exports=angular.module("quill-grammar.services.sentenceWriting",[require("./crud.js").name,require("./indexBy.js").name]).factory("SentenceWritingService",["CrudService","_","IndexService",function(CrudService,_,IndexService){function checkAndFormatSentenceWritingActivity(swa){var valid=_.every(["category","flag"],function(k){return swa[k]&&swa[k].$id?(swa[k+"Id"]=swa[k].$id,!0):!1});if(!valid)throw new Error("SentenceWritingActivity did not contain category or flag");return swa.rules=_.map(swa.rules,function(r){return{ruleId:r.$id,quantity:r.quantity}}),swa}var crud=new CrudService("sentenceWritings",["flagId","categoryId","rules","title","description"],"activities"),catIndex=new IndexService("sentenceWritingsByCategory");return this.saveSentenceWriting=function(sentenceWritingActivity){var swa=checkAndFormatSentenceWritingActivity(sentenceWritingActivity);return crud.save(swa).then(function(ref){return catIndex.addElementToEntry(swa.categoryId,ref)})},this.saveSentenceWritingWithId=function(sentenceWritingActivity){var swa=checkAndFormatSentenceWritingActivity(sentenceWritingActivity),id=String(swa.$id);return crud.saveWithCustomId(swa).then(function(){return catIndex.addElementToEntry(swa.categoryId,id)})},this.updateSentenceWriting=function(sentenceWritingActivity){var swa=checkAndFormatSentenceWritingActivity(sentenceWritingActivity);if(!swa.oldCategoryId)throw new Error("Old Category Id not defined");return catIndex.removeElementFromEntry(swa.oldCategoryId,swa.$id).then(function(){return crud.update(swa).then(function(){return catIndex.addElementToEntry(swa.categoryId,swa.$id)})})},this.deleteSentenceWriting=function(sentenceWritingActivity){return crud.del(sentenceWritingActivity)},this.getSentenceWriting=function(sentenceWritingActivityId){return crud.get(sentenceWritingActivityId)},this.getAllSentenceWritings=function(){return crud.all()},this}])},{"./crud.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/crud.js","./indexBy.js":"/home/will/Clients/Quill-Grammar/src/scripts/services/indexBy.js"}]},{},["./src/scripts/app/app.module.js"]);